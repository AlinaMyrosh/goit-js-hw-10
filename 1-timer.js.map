{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst start = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('span[data-days]');\nconst hoursValue = document.querySelector('span[data-hours]');\nconst minutesValue = document.querySelector('span[data-minutes]');\nconst secondsValue = document.querySelector('span[data-seconds]');\n\nstart.addEventListener('click', startTimer);\n\nlet userSelectedDate = null;\nstart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (selectedDates[0] < Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      return;\n    } else {\n      start.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction startTimer() {\n  input.disabled = true;\n  start.disabled = true;\n  const timerID = setInterval(() => {\n    const delta = userSelectedDate.getTime() - Date.now();\n\n    if (delta <= 0) {\n      input.disabled = false;\n      clearInterval(timerID);\n    } else {\n      const result = convertMs(delta);\n      setTimer(result);\n    }\n  }, 1000);\n}\n\nfunction setTimer({ days, hours, minutes, seconds }) {\n  daysValue.textContent = `${days}`;\n  hoursValue.textContent = `${hours}`;\n  minutesValue.textContent = `${minutes}`;\n  secondsValue.textContent = `${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","start","daysValue","hoursValue","minutesValue","secondsValue","startTimer","userSelectedDate","options","selectedDates","iziToast","flatpickr","timerID","delta","result","convertMs","setTimer","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,oBAAoB,EACnDC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAEhEJ,EAAM,iBAAiB,QAASK,CAAU,EAE1C,IAAIC,EAAmB,KACvBN,EAAM,SAAW,GAEjB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAF,EAAmBE,EAAc,CAAC,EAE9BA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CACjCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,MACN,MACMT,EAAM,SAAW,EAEpB,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,SAASF,GAAa,CACpBN,EAAM,SAAW,GACjBC,EAAM,SAAW,GACjB,MAAMW,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAQN,EAAiB,QAAS,EAAG,KAAK,IAAG,EAEnD,GAAIM,GAAS,EACXb,EAAM,SAAW,GACjB,cAAcY,CAAO,MAChB,CACL,MAAME,EAASC,EAAUF,CAAK,EAC9BG,EAASF,CAAM,CAChB,CACF,EAAE,GAAI,CACT,CAEA,SAASE,EAAS,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACnDlB,EAAU,YAAc,GAAGe,CAAI,GAC/Bd,EAAW,YAAc,GAAGe,CAAK,GACjCd,EAAa,YAAc,GAAGe,CAAO,GACrCd,EAAa,YAAc,GAAGe,CAAO,EACvC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASP,EAAUQ,EAAI,CAMrB,MAAMN,EAAOI,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CL,EAAQG,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDJ,EAAUE,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEH,EAAUC,EACd,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}